# on: push
# name: Test, Build and Release apk
# jobs:
#   build:
#     name: Build APK
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v1
#     - uses: actions/setup-java@v1
#       with:
#         java-version: '12.x'
#     - uses: subosito/flutter-action@v1
#       with:
#         flutter-version: '1.7.8+hotfix.4'
#     - run: flutter pub get
#     - run: flutter build apk --debug --split-per-abi
#     - name: Create a Release APK
#       uses: ncipollo/release-action@v1
#       with:
#         artifacts: "build/app/outputs/apk/debug/*.apk"
#         token: ${{ secrets.TOKEN }}

name: Flutter CI/CD

on:
  push:
    branches:
      - main # Chạy CI/CD khi có thay đổi trên nhánh main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Lấy mã nguồn từ repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Thiết lập Flutter
      - name: Setup Flutter
        uses: flutter-actions/setup-flutter@v2
        with:
          version: "3.19.6"

      # Step 3: Cài đặt dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 4: Kiểm tra mã nguồn
      - name: Run Flutter analyze
        run: flutter analyze

      # Step 5: Chạy kiểm thử
      - name: Run Flutter tests
        run: flutter test

      # Step 6: Build APK (nếu có nhu cầu triển khai cho Android)
      - name: Build APK
        run: flutter build apk --release
        # Tải apk về
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk # Tên của artifact
          path: build/app/outputs/flutter-apk/app-release.apk # Đường dẫn tới file APK


      # # Step 7: Build iOS (nếu có nhu cầu triển khai cho iOS)
      # - name: Build iOS
      #   run: flutter build ios --release
      #   if: runner.os == 'macOS' # Chỉ chạy trên macOS runner
